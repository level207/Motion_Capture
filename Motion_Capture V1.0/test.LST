C51 COMPILER V9.00   TEST                                                                  04/07/2014 02:12:33 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE TEST
OBJECT MODULE PLACED IN test.OBJ
COMPILER INVOKED BY: D:\Program Files\Keil C\C51\BIN\C51.EXE test.c LARGE BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <stdio.h>
   2          #include "test.h"
   3          
   4          uchar ge,shi,bai,qian,wan,shiwan;           //显示变量
   5          uchar data_write[18] = 0;
   6          int dis_data = 0;
   7          uchar dis[4];                         //显示数组
   8          
   9          void a_conversion(long temp_data)  
  10          {     
  11   1          shiwan=temp_data/100000+0x30 ;
  12   1          temp_data=temp_data%100000;   //取余运算 
  13   1          wan=temp_data/10000+0x30 ;
  14   1          temp_data=temp_data%10000;   //取余运算
  15   1              qian=temp_data/1000+0x30 ;
  16   1          temp_data=temp_data%1000;    //取余运算
  17   1          bai=temp_data/100+0x30   ;
  18   1          temp_data=temp_data%100;     //取余运算
  19   1          shi=temp_data/10+0x30    ;
  20   1          temp_data=temp_data%10;      //取余运算
  21   1          ge=temp_data+0x30;  
  22   1      }
  23          
  24          //显示x轴
  25          void a_display_x()
  26          {   
  27   1          float temp;
  28   1          dis_data=(data_write[1]<<8)+data_write[0];  //合成数据   
  29   1              DisplayOneChar('X');   //第0行，第0列 显示X
  30   1          DisplayOneChar(':'); 
  31   1      
  32   1              if(dis_data<0){
  33   2              dis_data=-dis_data;
  34   2          DisplayOneChar('-');      //显示正负符号位
  35   2              }
  36   1              else DisplayOneChar('+'); //显示空格
  37   1      
  38   1          temp=(float)dis_data*3.9;  //计算数据和显示,查考ADXL345快速入门第4页
  39   1          printf("%5.4f ", temp/1000);
  40   1              
  41   1              /*
  42   1              a_conversion(temp);          //转换出显示需要的数据
  43   1          DisplayOneChar(qian); 
  44   1              DisplayOneChar('.'); 
  45   1          DisplayOneChar(bai); 
  46   1          DisplayOneChar(shi); 
  47   1              DisplayOneChar(' ');
  48   1              */
  49   1      
  50   1              return;
  51   1      }
  52          
  53          //***********************************************************************
  54          //显示y轴
  55          void a_display_y()
C51 COMPILER V9.00   TEST                                                                  04/07/2014 02:12:33 PAGE 2   

  56          {     
  57   1          float temp;
  58   1          dis_data=(data_write[3]<<8)+data_write[2];  //合成数据 
  59   1              DisplayOneChar('Y');   //第1行，第0列 显示y
  60   1          DisplayOneChar(':'); 
  61   1                
  62   1              if(dis_data<0){
  63   2              dis_data=-dis_data;
  64   2          DisplayOneChar('-');      //显示正负符号位
  65   2              }
  66   1              else DisplayOneChar('+'); //显示空格
  67   1      
  68   1          temp=(float)dis_data*3.9;  //计算数据和显示,查考ADXL345快速入门第4页
  69   1              printf("%5.4f ", temp/1000);
  70   1              /*    
  71   1              a_conversion(temp);          //转换出显示需要的数据
  72   1      
  73   1          DisplayOneChar(qian); 
  74   1              DisplayOneChar('.'); 
  75   1          DisplayOneChar(bai); 
  76   1          DisplayOneChar(shi);  
  77   1              DisplayOneChar(' ');
  78   1              */
  79   1              return;
  80   1      }
  81          
  82          //***********************************************************************
  83          //显示z轴
  84          void a_display_z()
  85          {     
  86   1              float temp;
  87   1          dis_data=(data_write[5]<<8)+data_write[4];    //合成数据 
  88   1              DisplayOneChar('Z');  //第0行，第10列 显示Z
  89   1          DisplayOneChar(':');        
  90   1                
  91   1              if(dis_data<0){
  92   2              dis_data=-dis_data;
  93   2          DisplayOneChar('-');       //显示负符号位
  94   2              }
  95   1              else DisplayOneChar('+');  //显示空格
  96   1      
  97   1          temp=(float)dis_data*3.9;  //计算数据和显示,查考ADXL345快速入门第4页
  98   1              printf("%5.4f ", temp/1000);
  99   1      
 100   1              /*
 101   1              a_conversion(temp);          //转换出显示需要的数据
 102   1          DisplayOneChar(qian); 
 103   1              DisplayOneChar('.'); 
 104   1          DisplayOneChar(bai); 
 105   1          DisplayOneChar(shi); 
 106   1              DisplayOneChar(' ');
 107   1              */
 108   1              return;
 109   1      }
 110          
 111          void i_conversion(uchar *s,int temp_data)
 112          {
 113   1              if(temp_data<0){
 114   2              temp_data=-temp_data;
 115   2          *s='-';
 116   2              }
 117   1              else *s='+';
C51 COMPILER V9.00   TEST                                                                  04/07/2014 02:12:33 PAGE 3   

 118   1          *++s =temp_data/100+0x30;
 119   1          temp_data=temp_data%100;     //取余运算
 120   1          *++s =temp_data/10+0x30;
 121   1          temp_data=temp_data%10;      //取余运算
 122   1          *++s =temp_data+0x30;       
 123   1      }
 124          
 125          //***********************************************************************
 126          //显示x轴
 127          void i_display_x()
 128          {  
 129   1          dis_data=(data_write[0]<<8) | data_write[1];   //合成数据   
 130   1          dis_data/=14.375;              //计算对应 度/秒
 131   1          i_conversion(dis, dis_data);   //转换数据显示
 132   1              DisplayOneChar('X');   //第0行，第0列 显示X
 133   1          DisplayOneChar(':');
 134   1              printf("%d ", dis_data);
 135   1          //DisplayListChar(dis,4);    //启始列，行，显示数组，显示长度
 136   1              //DisplayOneChar(' ');
 137   1      
 138   1              return;
 139   1      }
 140          
 141          //***********************************************************************
 142          //显示y轴
 143          void i_display_y()
 144          {    
 145   1          dis_data=(data_write[2]<<8) | data_write[3];   //合成数据   
 146   1          dis_data/=14.375;              //计算对应 度/秒
 147   1          i_conversion(dis, dis_data);     //转换数据显示
 148   1              DisplayOneChar('Y');   //第0行，第0列 显示X
 149   1          DisplayOneChar(':');
 150   1              printf("%d ", dis_data);
 151   1          //DisplayListChar(dis,4);    //启始列，行，显示数组，显示位数
 152   1              //DisplayOneChar(' ');
 153   1      
 154   1              return;
 155   1      
 156   1      }
 157          
 158          //***********************************************************************
 159          //显示z轴
 160          void i_display_z()
 161          { 
 162   1          dis_data=(data_write[4]<<8) | data_write[5];     //合成数据   
 163   1          dis_data/=14.375;                //计算对应 度/秒
 164   1          i_conversion(dis, dis_data);       //转换数据显示
 165   1              DisplayOneChar('Z');   //第0行，第0列 显示X
 166   1          DisplayOneChar(':');
 167   1              printf("%d ", dis_data);
 168   1          //DisplayListChar(dis,4);     //启始列，行，显示数组，显示位数
 169   1              //DisplayOneChar(' ');
 170   1      
 171   1              return;
 172   1      }
 173          
 174          /***********************************/
 175          void DisplayListChar(uchar *DData,L)
 176          {
 177   1              uchar ListLength=0; 
 178   1              while(L--)             
 179   1              {                       
C51 COMPILER V9.00   TEST                                                                  04/07/2014 02:12:33 PAGE 4   

 180   2                      DisplayOneChar(DData[ListLength]);
 181   2                      ListLength++;  
 182   2              }
 183   1      }
 184          
 185          void h_conversion(uint temp_data)  
 186          {  
 187   1          wan=temp_data/10000+0x30 ;
 188   1          temp_data=temp_data%10000;   //取余运算
 189   1              qian=temp_data/1000+0x30 ;
 190   1          temp_data=temp_data%1000;    //取余运算
 191   1          bai=temp_data/100+0x30   ;
 192   1          temp_data=temp_data%100;     //取余运算
 193   1          shi=temp_data/10+0x30    ;
 194   1          temp_data=temp_data%10;      //取余运算
 195   1          ge=temp_data+0x30;  
 196   1      }
 197          
 198          void h_display_dierection()
 199          {
 200   1              int x, y, z;
 201   1              double angle = 0;
 202   1      
 203   1          x=data_write[0] << 8 | data_write[1]; //Combine MSB and LSB of X Data output register
 204   1          z=data_write[2] << 8 | data_write[3]; //Combine MSB and LSB of Z Data output register
 205   1          y=data_write[4] << 8 | data_write[5]; //Combine MSB and LSB of Y Data output register
 206   1      
 207   1          angle= atan2((double)y,(double)x) * (180 / 3.14159265) + 180; // angle in degrees
 208   1          angle*=10;
 209   1          h_conversion(angle);       //计算数据和显示
 210   1              DisplayOneChar('A'); 
 211   1          DisplayOneChar(':'); 
 212   1          DisplayOneChar(qian); 
 213   1          DisplayOneChar(bai); 
 214   1          DisplayOneChar(shi); 
 215   1          DisplayOneChar('.'); 
 216   1              DisplayOneChar(ge);
 217   1              DisplayOneChar(' '); 
 218   1      
 219   1              return;
 220   1      }
 221          
 222          void h_display_x()
 223          {
 224   1      
 225   1          dis_data=data_write[0] << 8 | data_write[1]; //Combine MSB and LSB of X Data output register
 226   1      
 227   1          h_conversion(dis_data);       //计算数据和显示
 228   1              DisplayOneChar('X'); 
 229   1          DisplayOneChar(':'); 
 230   1          DisplayOneChar(bai); 
 231   1          DisplayOneChar(shi); 
 232   1              DisplayOneChar(ge);
 233   1              DisplayOneChar(' '); 
 234   1      
 235   1              return;
 236   1      }
 237          
 238          void h_display_y()
 239          {
 240   1      
 241   1          dis_data=data_write[2] << 8 | data_write[3]; //Combine MSB and LSB of X Data output register
C51 COMPILER V9.00   TEST                                                                  04/07/2014 02:12:33 PAGE 5   

 242   1      
 243   1          h_conversion(dis_data);       //计算数据和显示
 244   1              DisplayOneChar('Y'); 
 245   1          DisplayOneChar(':'); 
 246   1          DisplayOneChar(bai); 
 247   1          DisplayOneChar(shi); 
 248   1              DisplayOneChar(ge);
 249   1              DisplayOneChar(' '); 
 250   1      
 251   1              return;
 252   1      }
 253          
 254          void h_display_z()
 255          {
 256   1      
 257   1          dis_data=data_write[4] << 8 | data_write[5]; //Combine MSB and LSB of X Data output register
 258   1      
 259   1          h_conversion(dis_data);       //计算数据和显示
 260   1              DisplayOneChar('Z'); 
 261   1          DisplayOneChar(':'); 
 262   1          DisplayOneChar(bai); 
 263   1          DisplayOneChar(shi); 
 264   1              DisplayOneChar(ge);
 265   1              DisplayOneChar(' '); 
 266   1      
 267   1              return;
 268   1      }
 269          
 270          /*********************************************
 271          * name:                 DisplayOneChar
 272          * description:  从串口输出一个ASCII值
 273          * input:                NONE
 274          * return:               NONE
 275          *********************************************/
 276          void DisplayOneChar(uchar out)
 277          {
 278   1              SBUF0 = out;
 279   1              delay_5ms();
 280   1              delay_5ms(); 
 281   1      
 282   1              return;
 283   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1698    ----
   CONSTANT SIZE    =     11    ----
   XDATA SIZE       =     30      23
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
